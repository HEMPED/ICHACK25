{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///mnt/c/Users/hpedd/Desktop/ICHACK25/src/app/hooks/useWebSocket.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst useWebSocket = (url) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [ws, setWs] = useState(null);\r\n  const [sessionId, setSessionId] = useState(null);\r\n  const [playerId, setPlayerId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const socket = new WebSocket(url);\r\n\r\n    socket.onopen = () => {\r\n      console.log(\"✅ WebSocket connection opened\");\r\n    };\r\n\r\n    socket.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      console.log(\"📩 Received:\", data);\r\n\r\n      // Store messages\r\n      setMessages((prevMessages) => [...prevMessages, data]);\r\n\r\n      // Handle session creation\r\n      if (data.event === \"session_created\") {\r\n        setSessionId(data.session_id);\r\n        setPlayerId(data.player_id);\r\n      }\r\n\r\n      // Handle joining a session\r\n      if (data.event === \"session_joined\") {\r\n        setSessionId(data.session_id);\r\n        setPlayerId(data.player_id);\r\n      }\r\n    };\r\n\r\n    socket.onerror = (error) => {\r\n      console.error(\"❌ WebSocket Error:\", error);\r\n    };\r\n\r\n    socket.onclose = () => {\r\n      console.log(\"❌ WebSocket disconnected\");\r\n    };\r\n\r\n    setWs(socket);\r\n\r\n    return () => {\r\n      socket.close();\r\n    };\r\n  }, [url]);\r\n\r\n  /**\r\n   * Send a JSON message to the WebSocket server.\r\n   * @param {Object} message - The message object to send.\r\n   */\r\n  const sendMessage = (message) => {\r\n    if (ws && ws.readyState === WebSocket.OPEN) {\r\n      ws.send(JSON.stringify(message));\r\n    } else {\r\n      console.warn(\"WebSocket is not open.\");\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Create a new game session.\r\n   * @param {string} playerName - Name of the player creating the session.\r\n   */\r\n  const createSession = (playerName) => {\r\n    sendMessage({ action: \"create_session\", player_name: playerName });\r\n  };\r\n\r\n  /**\r\n   * Join an existing game session.\r\n   * @param {string} sessionId - The session ID to join.\r\n   * @param {string} playerName - The name of the joining player.\r\n   */\r\n  const joinSession = (sessionId, playerName) => {\r\n    sendMessage({ action: \"join_session\", session_id: sessionId, player_name: playerName });\r\n  };\r\n\r\n  /**\r\n   * Submit a snippet for voting.\r\n   * @param {string} snippet - The text snippet to submit.\r\n   */\r\n  const submitSnippet = (snippet) => {\r\n    if (!sessionId) {\r\n      console.warn(\"❌ You are not in a session.\");\r\n      return;\r\n    }\r\n    sendMessage({ action: \"submit_snippet\", snippet });\r\n  };\r\n\r\n  /**\r\n   * Submit votes for snippets.\r\n   * @param {Array} votes - An array of player IDs being voted for.\r\n   */\r\n  const submitVotes = (votes) => {\r\n    if (!sessionId) {\r\n      console.warn(\"You are not in a session.\");\r\n      return;\r\n    }\r\n    sendMessage({ action: \"submit_votes\", voter_id: playerId, votes });\r\n  };\r\n\r\n  return { messages, sendMessage, createSession, joinSession, submitSnippet, submitVotes, sessionId, playerId };\r\n};\r\n\r\nexport default useWebSocket;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,eAAe,CAAC;IACpB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC3C,MAAM,CAAC,IAAI,MAAM,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7B,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,SAAS,IAAI,UAAU;QAE7B,OAAO,MAAM,GAAG;YACd,QAAQ,GAAG,CAAC;QACd;QAEA,OAAO,SAAS,GAAG,CAAC;YAClB,MAAM,OAAO,KAAK,KAAK,CAAC,MAAM,IAAI;YAClC,QAAQ,GAAG,CAAC,gBAAgB;YAE5B,iBAAiB;YACjB,YAAY,CAAC,eAAiB;uBAAI;oBAAc;iBAAK;YAErD,0BAA0B;YAC1B,IAAI,KAAK,KAAK,KAAK,mBAAmB;gBACpC,aAAa,KAAK,UAAU;gBAC5B,YAAY,KAAK,SAAS;YAC5B;YAEA,2BAA2B;YAC3B,IAAI,KAAK,KAAK,KAAK,kBAAkB;gBACnC,aAAa,KAAK,UAAU;gBAC5B,YAAY,KAAK,SAAS;YAC5B;QACF;QAEA,OAAO,OAAO,GAAG,CAAC;YAChB,QAAQ,KAAK,CAAC,sBAAsB;QACtC;QAEA,OAAO,OAAO,GAAG;YACf,QAAQ,GAAG,CAAC;QACd;QAEA,MAAM;QAEN,OAAO;YACL,OAAO,KAAK;QACd;IACF,GAAG;QAAC;KAAI;IAER;;;GAGC,GACD,MAAM,cAAc,CAAC;QACnB,IAAI,MAAM,GAAG,UAAU,KAAK,UAAU,IAAI,EAAE;YAC1C,GAAG,IAAI,CAAC,KAAK,SAAS,CAAC;QACzB,OAAO;YACL,QAAQ,IAAI,CAAC;QACf;IACF;IAEA;;;GAGC,GACD,MAAM,gBAAgB,CAAC;QACrB,YAAY;YAAE,QAAQ;YAAkB,aAAa;QAAW;IAClE;IAEA;;;;GAIC,GACD,MAAM,cAAc,CAAC,WAAW;QAC9B,YAAY;YAAE,QAAQ;YAAgB,YAAY;YAAW,aAAa;QAAW;IACvF;IAEA;;;GAGC,GACD,MAAM,gBAAgB,CAAC;QACrB,IAAI,CAAC,WAAW;YACd,QAAQ,IAAI,CAAC;YACb;QACF;QACA,YAAY;YAAE,QAAQ;YAAkB;QAAQ;IAClD;IAEA;;;GAGC,GACD,MAAM,cAAc,CAAC;QACnB,IAAI,CAAC,WAAW;YACd,QAAQ,IAAI,CAAC;YACb;QACF;QACA,YAAY;YAAE,QAAQ;YAAgB,UAAU;YAAU;QAAM;IAClE;IAEA,OAAO;QAAE;QAAU;QAAa;QAAe;QAAa;QAAe;QAAa;QAAW;IAAS;AAC9G;uCAEe"}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file:///mnt/c/Users/hpedd/Desktop/ICHACK25/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useRouter } from \"next/navigation\";\nimport { useState } from \"react\";\nimport useWebSocket from \"@/app/hooks/useWebSocket\";\n\nexport default function Home() {\n  const { messages, sendMessage, sessionId, playerId } = useWebSocket(\"ws://127.0.0.1:8000/ws\");\n  const [gameCode, setGameCode] = useState(\"\");\n  const [playerName, setPlayerName] = useState(\"\");\n  const router = useRouter();\n\n  /**\n   * Create a new game session.\n   */\n  const handleCreateGame = () => {\n    if (!playerName.trim()) {\n      alert(\"Enter a player name before creating a game.\");\n      return;\n    }\n    sendMessage({ action: \"create_session\", player_name: playerName });\n  };\n\n  /**\n   * Join an existing game session.\n   */\n  const handleJoinGame = () => {\n    if (!gameCode.trim() || !playerName.trim()) {\n      alert(\"Enter a valid game code and player name.\");\n      return;\n    }\n    sendMessage({ action: \"join_session\", session_id: gameCode, player_name: playerName });\n  };\n\n  /**\n   * Navigate to the game room once a session is created or joined.\n   */\n  if (sessionId) {\n    router.push(`/game?sessionId=${sessionId}&playerId=${playerId}`);\n  }\n\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-900 text-white\">\n      <div className=\"bg-gray-800 p-8 rounded-2xl shadow-lg w-96\">\n        <h1 className=\"text-2xl font-bold text-center mb-4\">Welcome</h1>\n        <div className=\"space-y-4\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter Your Name\"\n            value={playerName}\n            onChange={(e) => setPlayerName(e.target.value)}\n            className=\"w-full p-2 rounded-lg bg-gray-700 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Enter Game Code\"\n            value={gameCode}\n            onChange={(e) => setGameCode(e.target.value)}\n            className=\"w-full p-2 rounded-lg bg-gray-700 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n          <button\n            onClick={handleJoinGame}\n            className=\"w-full p-2 bg-blue-600 hover:bg-blue-500 rounded-lg font-semibold\"\n          >\n            Join Game\n          </button>\n          <div className=\"flex items-center justify-center\">\n            <span className=\"text-gray-400\">or</span>\n          </div>\n          <button\n            onClick={handleCreateGame}\n            className=\"w-full p-2 bg-green-600 hover:bg-green-500 rounded-lg font-semibold\"\n          >\n            Create Game\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS;IACtB,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EA